# -*- coding: utf-8 -*-
# Generated by Django 1.11.10 on 2018-04-09 04:31
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('logo', models.ImageField(default='None/payroll_logo.png', upload_to='payroll')),
                ('address_line_1', models.CharField(max_length=200)),
                ('address_line_2', models.CharField(max_length=200)),
                ('state', models.CharField(max_length=200)),
                ('postal_code', models.IntegerField(default=0)),
                ('country', models.CharField(max_length=200)),
                ('fax', models.CharField(max_length=17)),
                ('website', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(choices=[('PROD', 'Production'), ('DEV', 'Development'), ('RND', 'Research and Development'), ('HRM', 'Human Resource Management'), ('MRK', 'Marketing'), ('ANF', 'Accounting and Finance')], max_length=200)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(choices=[('CTO', 'Chief Technology Officer'), ('CMO', 'Chief Marketing Officer'), ('CAO', 'Chief Accounting Officer'), ('CLO', 'Chief Legal Officer'), ('CEO', 'Chief Executive Manager'), ('SD', 'Senior Developer'), ('JD', 'Junior Developer'), ('HRM', 'Human Resource Manager'), ('INT', 'INTERN')], max_length=200)),
                ('privilege_leave', models.IntegerField(default=0)),
                ('casual_leave', models.IntegerField(default=0)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Holiday',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.CharField(choices=[('2018-01-26', 'Jan 26, 2018'), ('2018-02-14', 'Feb 14, 2018'), ('2018-03-02', 'Mar 2, 2018'), ('2018-03-25', 'Mar 25, 2018'), ('2018-03-29', 'Mar 29, 2018'), ('2018-03-30', 'Mar 30, 2018'), ('2018-03-30', 'Apr 30, 2018'), ('2018-06-16', 'Jun 16, 2018'), ('2018-08-15', 'Aug 15, 2018'), ('2018-08-22', 'Aug 22, 2018'), ('2018-09-03', 'Sep 3, 2018'), ('2018-09-13', 'Sep 13, 2018'), ('2018-09-21', 'Sep 21, 2018'), ('2018-09-21', 'Sep 21, 2018'), ('2018-10-19', 'Oct 19, 2018'), ('2018-11-07', 'Nov 7, 2018'), ('2018-11-21', 'Nov 21, 2018'), ('2018-11-23', 'Nov 23, 2018'), ('2018-12-26', 'Dec 25, 2018'), ('2018-01-01', 'Jan 1, 2018'), ('2018-01-14', 'Jan 14, 2018')], max_length=200)),
                ('name', models.CharField(choices=[('RD', 'Republic Day'), ('MSHIV', 'Maha Shivaratri'), ('HOLI', 'Holi'), ('RM', 'Rama Navami'), ('MJ', 'Mahavir Jayanti'), ('GF', 'Good Friday'), ('BP', 'Buddha Purnima'), ('IDF', "Idu'l Fitr"), ('ID', 'Independence Day'), ('IDZ', 'Id-ul-Zuha(Bakrid)'), ('JN', 'Janmashtarni (Vaishnav)'), ('GC', 'Ganesh Chaturthi/Vinayaka Chaturthi'), ('MUH', 'Muharram/Ashura'), ('MGJ', 'Mahatma Gandhi Jayanti'), ('DUS', 'Dussehra'), ('DIW', 'Diwali (Deepavali)'), ('ID', 'Id-e- Milad (birthday of Prophet Mohammad)'), ('GN', "Guru Nanak's Birthday"), ('CD', 'Christmas Day'), ('Nd', 'New Year Day'), ('MSANK', 'Makar Sankranti')], max_length=200)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Job_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('jobtype', models.CharField(choices=[('PROB', 'Probation'), ('PER', 'Permanent Employee'), ('TEM', 'Temporary Employee')], default='PE', max_length=200)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Work_Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('worktype', models.CharField(choices=[('SH', 'Saturday Halfday'), ('SW', 'Saturday Working'), ('SSH', 'Saturday-Sunday Holiday')], max_length=200)),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='company.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
